#include "stm32f0xx_ll_rcc.h"
  #include "stm32f0xx_ll_system.h"
  #include "stm32f0xx_ll_bus.h"
  #include "stm32f0xx_ll_gpio.h"
  #include "stm32f0xx_ll_tim.h"
  #include "stm32f0xx_ll_exti.h"

  #include "system_stm32f0xx.h"

int count = 0;
int disp [4];
static void rcc_config()
{
    /* Set FLASH latency */
    LL_FLASH_SetLatency(LL_FLASH_LATENCY_1);

    /* Enable HSI and wait for activation*/
    LL_RCC_HSI_Enable();
    while (LL_RCC_HSI_IsReady() != 1);

    /* Main PLL configuration and activation */
    LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI_DIV_2,
                                LL_RCC_PLL_MUL_12);

    LL_RCC_PLL_Enable();
    while (LL_RCC_PLL_IsReady() != 1);

    /* Sysclk activation on the main PLL */
    LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
    LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
    while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL);

    /* Set APB1 prescaler */
    LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);

    /* Update CMSIS variable (which can be updated also
     * through SystemCoreClockUpdate function) */
    SystemCoreClock = 48000000;
}

/*
 * Clock on GPIOC and set one led
 */


/*
 * Configure timer to output compare mode
 */
static void timers_config(void)
{
    /*
     * Configure output channel
     */
    LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
    LL_GPIO_SetPinMode(GPIOA, LL_GPIO_PIN_5, LL_GPIO_MODE_ALTERNATE);
    LL_GPIO_SetAFPin_0_7(GPIOA, LL_GPIO_PIN_5, LL_GPIO_AF_2);

    /*
     * Setup timer to output compare mode
     */
    LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM2);
    LL_TIM_SetPrescaler(TIM2, 47999);
    LL_TIM_SetAutoReload(TIM2, 999);
    LL_TIM_OC_SetCompareCH1(TIM2, 50);
    LL_TIM_CC_EnableChannel(TIM2, LL_TIM_CHANNEL_CH1);
    LL_TIM_OC_SetPolarity(TIM2, LL_TIM_CHANNEL_CH1, LL_TIM_OCPOLARITY_HIGH);
    //LL_TIM_OC_SetMode(TIM2, LL_TIM_CHANNEL_CH1, LL_TIM_OCMODE_TOGGLE);
    LL_TIM_OC_SetMode(TIM2, LL_TIM_CHANNEL_CH1, LL_TIM_OCMODE_PWM1);
    LL_TIM_SetCounterMode(TIM2, LL_TIM_COUNTERMODE_UP);
    LL_TIM_EnableIT_CC1(TIM2);
    LL_TIM_EnableCounter(TIM2);
    /*
     * Setup NVIC
     */
    NVIC_EnableIRQ(TIM2_IRQn);
    NVIC_SetPriority(TIM2_IRQn, 1);
    return;
}

void TIM2_IRQHandler(void)
{
    LL_GPIO_TogglePin(GPIOC, LL_GPIO_PIN_8);
    LL_TIM_ClearFlag_CC1(TIM2);
    count++;
}
    
    
  
    static void gpio_config()
  {
    LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
    
    LL_GPIO_SetPinMode(GPIOA, LL_GPIO_PIN_0, LL_GPIO_MODE_OUTPUT); //a
    LL_GPIO_SetPinMode(GPIOA, LL_GPIO_PIN_1, LL_GPIO_MODE_OUTPUT); //b 
    LL_GPIO_SetPinMode(GPIOA, LL_GPIO_PIN_2, LL_GPIO_MODE_OUTPUT); //c   
    LL_GPIO_SetPinMode(GPIOA, LL_GPIO_PIN_3, LL_GPIO_MODE_OUTPUT); //d 
    LL_GPIO_SetPinMode(GPIOA, LL_GPIO_PIN_4, LL_GPIO_MODE_OUTPUT); //e
    LL_GPIO_SetPinMode(GPIOA, LL_GPIO_PIN_5, LL_GPIO_MODE_OUTPUT); //f
    LL_GPIO_SetPinMode(GPIOA, LL_GPIO_PIN_6, LL_GPIO_MODE_OUTPUT); //g
    
    LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOB);
    LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_3, LL_GPIO_MODE_OUTPUT); //1
    LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_4, LL_GPIO_MODE_OUTPUT); //2 
    LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_5, LL_GPIO_MODE_OUTPUT); //3   
    LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_6, LL_GPIO_MODE_OUTPUT); //4  
    
    LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOC);
    LL_GPIO_SetPinMode(GPIOC, LL_GPIO_PIN_8, LL_GPIO_MODE_OUTPUT);
    LL_GPIO_SetPinMode(GPIOC, LL_GPIO_PIN_9, LL_GPIO_MODE_OUTPUT);
    
    //LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOB);
    //LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_10, LL_GPIO_MODE_INPUT);//L1
    //LL_GPIO_SetPinMode(GPIOB, LL_GPIO_PIN_11, LL_GPIO_MODE_INPUT);//L1
    
      }

 void razvert(int x)
 {
   if (x > 9999) {x = 0;}
   if (x < 0) { x = 9999;}
   for (int i = 0; i < 4; i++)
   {
     disp[i] = x % 10;
     x = x / 10;
   }
   
 }
 void select(int x)
 {
   switch (x)
   {
   case 0:
      LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_3);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_6);
      break;
      
   case 1:
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_3);
      LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_6);
      break;
      
   case 2:
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_3);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_4);
      LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_6);
      break;
      
   case 3:
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_3);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_5);
      LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_6);
      break;
   }
 }
 void Ledwrite(int x)
  {
    
    switch (x)
    {
      case 0:
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 1:
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 2:
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 3:
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 4:
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 5:
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 6:
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 7:
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 8:
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
      case 9:
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_6);
      break;
      
    }
    
  }
   void clear()
   {
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_0);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_1);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_2);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_3);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_4);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_5);
      LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_6);
   } 
   
  
    main()
{
  
    rcc_config();
    gpio_config();
     timers_config();
  
  
  for (int e = 0; e < 10000000; e++)
  {
    //set();
    //count();
      //disp[3] = 0;
      razvert(count);
      for ( int i = 0; i < 4; i++)
      {
        for ( int t = 0; t < 100; t++){}
        select(i);
        Ledwrite(disp[i]);
        for ( int t = 0; t < 100; t++){}
        clear();
      }
    } 
    while(1){}
   
  }
